---
name: Deploy to production

on:
    push:
        branches:
            - main
        paths-ignore: 
            - 'report/**'

jobs:
    build:
        runs-on: ubuntu-latest
        environment: production

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push minitwit
              uses: docker/build-push-action@v5
              with:
                context: .
                file: ./Dockerfile
                push: true
                tags: ${{ secrets.DOCKER_USERNAME }}/minitwit
                cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/minitwit:webbuildcache
                cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/minitwit:webbuildcache,mode=max

            - name: Configure SSH
              run: |
                cd .infrastructure
                echo "$SSH_KEY" > ssh_key/terraform
                chmod 600 ssh_key/terraform
              env:
                SSH_KEY: ${{ secrets.SSH_KEY }}

            - name: Run Terraform Bootstrap
              run: |
                cd .infrastructure
                chmod +x bootstrap.sh
                ./bootstrap.sh
              env:
                TF_VAR_do_token: ${{ secrets.TF_VAR_do_token }}
                SPACE_NAME: ${{ secrets.SPACE_NAME }}
                STATE_FILE: ${{ secrets.STATE_FILE }}
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                DATABASE_URL: ${{ secrets.DATABASE_URL }}
                NR_LICENSE_KEY: ${{ secrets.NR_LICENSE_KEY }}
                MINITWIT_VERSION: latest

